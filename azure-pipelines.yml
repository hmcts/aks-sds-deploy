name: ${{ parameters.action }} - ${{ parameters.env }}.${{ parameters.cluster }}.${{ parameters.location }}

trigger: none

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts (1)'

pool:
  vmImage: "ubuntu-latest"



parameters:
  - name: action
    displayName: action
    type: string
    default: "plan"
    values:
      - plan
      - apply

  - name: cluster
    displayName: Cluster
    type: string
    default: "All"
    values:
      - "All"
      - "00"
      - "01"

  - name: location
    displayName: Location
    type: string
    default: "UK South"
    values:
      - "UK South"
      - "UK West"

  - name: env
    displayName: Environment
    type: string
    default: "sbox"
    values:
      - ithc
      - dev
      - demo
      - sbox
      - ptlsbox
      - test
      - stg
      - ptl
      - prod

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-20.04 
  - name: project
    value: ss
  - name: serviceConnection
    value: OPS-APPROVAL-GATE-${{ parameters.env }}-ENVS
  - name: tfInitSub
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
  - name: product
    value: "sds-platform"
  - name: action
    value: ${{ parameters.action }}
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries


stages:

  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'
         
  - stage: Aks
    displayName: "AKS clusters"
    pool: hmcts-cftptl-agent-pool
    dependsOn:
      - Managed_Identity
    jobs:
      - job: DeployInfrastructure
        timeoutInMinutes: 180
        steps:
          - task: AzureCLI@2
            displayName: test fork build for Thom
            inputs:
              azureSubscription: $(serviceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az account show'
              
          - template: pipeline-steps/deploy-service.yaml
            parameters:
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              serviceConnection: $(serviceConnection)
              stack: "aks"
              project: $(project)
              tfInitSub: ${{ variables.tfInitSub }}
              product: $(product)
              action: ${{ parameters.action }}
              ${{ if ne(parameters['cluster'], 'All') }}:
                targetCommand: '-target azurerm_resource_group.kubernetes_resource_group["\"${{parameters.cluster}}\""] -target module.kubernetes["\"${{parameters.cluster}}\""] -target azurerm_role_assignment.dev_to_stg["\"${{parameters.cluster}}\""] -target data.azurerm_resource_group.mi_stg_rg[0]'

 
  - stage: BootStrapClusters
    displayName: "BootStrap Clusters"
    dependsOn: Aks
    jobs:
      - job: BootStrap
        variables:
          ${{ if eq(parameters['cluster'], 'All') }}:
            clusters: $[ stageDependencies.Aks.DeployInfrastructure.outputs['setClusterNumbers.clusterNumbers'] ]
          ${{ if ne(parameters['cluster'], 'All') }}:
            clusters: ${{ parameters.cluster }}
        steps:
          - template: pipeline-steps/bootstrap.yaml
            parameters:
              environment: ${{ parameters.env }}
              serviceConnection: $(serviceConnection)
