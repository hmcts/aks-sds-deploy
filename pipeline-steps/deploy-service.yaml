parameters:
  environment: ''
  location: ''
  stack: ''
  project: ''
  tfversion: ''
  tfvars: ''
  tfInitSub: ''
  targetCommand: ''
  builtFrom: ''
  product: ''
  serviceConnection: ''
  action: ''
  setClusterNumbersEnvVar: false

steps:

  - template: steps/set-build-repo-suffix-env-var.yaml@cnp-azuredevops-libraries           
  - template: steps/terraform.yaml@cnp-azuredevops-libraries
    
    parameters:
      overrideAction: ${{ parameters.action }}
      environment: ${{ parameters.environment }}
      component: ${{ parameters.stack }}
      serviceConnection: ${{ parameters.serviceConnection }}
      terraformInitSubscription: ${{ parameters.tfInitSub }}
      product: ${{ parameters.product }}
      location: ${{ parameters.location }}
      tfVarsFile: "$(System.DefaultWorkingDirectory)/$(buildRepoSuffix)/environments/${{ parameters.stack }}/${{ parameters.environment }}.tfvars"
      planCommandOptions: "-var project=${{ parameters.project }} -var control_vault=$(controlKeyVault) ${{ parameters.targetCommand }} "

  - ${{ if eq(parameters.setClusterNumbersEnvVar, true) }}:
    - pwsh: |
        $tfVersion = Get-Content "$(System.DefaultWorkingDirectory)/$(buildRepoSuffix)/.terraform-version" -Raw
        Write-Host "##vso[task.setvariable variable=tfVersion]$tfVersion"
      displayName: Set terraform version env variable

    - task: TerraformCLI@0
      displayName: Terraform output
      inputs:
        command: output
        terraformVersion: $(tfVersion)
        workingDirectory: $(System.DefaultWorkingDirectory)/$(buildRepoSuffix)/components/${{ parameters.stack }}
        environmentServiceName: $(serviceConnection)

    - script: |
        echo "Setting clusterNumbers variable to $clusters"
        echo "##vso[task.setvariable variable=clusterNumbers;isOutput=true]$clusters"
      name: setClusterNumbers
      env:
        clusters: $(TF_OUT_CLUSTERS)